#
#
# (C) Copyright 2011-2012 Johns Hopkins University (JHU), All Rights
# Reserved.
#
# --- begin cisst license - do not edit ---
#
# This software is provided "as is" under an open source license, with
# no warranty.  The complete license can be found in license.txt and
# http://www.cisst.org/cisst/license.txt.
#
# --- end cisst license ---

# create a list of required cisst libraries
set (REQUIRED_CISST_LIBRARIES cisstCommon
                              cisstCommonXML
                              cisstVector
                              cisstNumerical
                              cisstOSAbstraction
                              cisstMultiTask
                              cisstParameterTypes
                              cisstStereoVision)

find_package (cisst REQUIRED ${REQUIRED_CISST_LIBRARIES})

if (cisst_FOUND_AS_REQUIRED)

  # load cisst configuration
  include (${CISST_USE_FILE})

  # MicronTracker library
  find_path (ClaronMicronTracker_INCLUDE_DIR
             NAMES MTC.h
             PATHS "C:/Program Files/Claron Technology/MicronTracker/Dist64"
                   "C:/Program Files/Claron Technology/MicronTracker/Dist"
                   "C:/Program Files (x86)/Claron Technology/MicronTracker/Dist")
  find_library (ClaronMicronTracker_MTC_LIBRARY
                NAMES MTC
                HINTS ${ClaronMicronTracker_INCLUDE_DIR})
  set (ClaronMicronTracker_LIBRARIES
       ${ClaronMicronTracker_MTC_LIBRARY})
  if (UNIX)
    find_library (ClaronMicronTracker_dc1394_LIBRARY
                  NAMES dc1394
                  HINTS ${ClaronMicronTracker_INCLUDE_DIR})
    find_library (raw1394_LIBRARY
                  NAMES raw1394)
    find_library (vnl_LIBRARY
                  NAMES vnl)
    find_library (vnl_algo_LIBRARY
                  NAMES vnl_algo)
    find_library (vcl_LIBRARY
                  NAMES vcl)
    find_library (v3p_netlib_LIBRARY
                  NAMES v3p_netlib)
    list (APPEND ClaronMicronTracker_LIBRARIES
          ${ClaronMicronTracker_dc1394_LIBRARY}
          ${raw1394_LIBRARY}
          ${vnl_LIBRARY}
          ${vnl_algo_LIBRARY}
          ${vcl_LIBRARY}
          ${v3p_netlib_LIBRARY})
  endif (UNIX)

  # create/configure file for find_package (sawClaronMicronTracker)
  set (sawClaronMicronTracker_INCLUDE_DIR "${sawClaronMicronTracker_SOURCE_DIR}/include" "${sawClaronMicronTracker_BINARY_DIR}" "${ClaronMicronTracker_INCLUDE_DIR}")
  set (sawClaronMicronTracker_LIBRARY_DIR "${LIBRARY_OUTPUT_PATH}")
  set (sawClaronMicronTracker_LIBRARIES sawClaronMicronTracker "${ClaronMicronTracker_LIBRARIES}")
  set (sawClaronMicronTrackerQt_LIBRARIES sawClaronMicronTrackerQt)

  include_directories (${sawClaronMicronTracker_INCLUDE_DIR} ${sawClaronMicronTracker_BINARY_DIR})
  set (sawClaronMicronTracker_HEADER_DIR "${sawClaronMicronTracker_SOURCE_DIR}/include/sawClaronMicronTracker")

  add_library (sawClaronMicronTracker
               ${sawClaronMicronTracker_HEADER_DIR}/sawClaronMicronTrackerExport.h
               mtsMicronTracker.cpp
               ${sawClaronMicronTracker_HEADER_DIR}/mtsMicronTracker.h)
  set_property (TARGET sawClaronMicronTracker PROPERTY FOLDER "sawClaronMicronTracker")
  target_link_libraries (sawClaronMicronTracker ${ClaronMicronTracker_LIBRARIES})
  cisst_target_link_libraries (sawClaronMicronTracker ${REQUIRED_CISST_LIBRARIES})

  # Qt widgets
  if (CISST_HAS_QT)

    file (MAKE_DIRECTORY "${sawClaronMicronTracker_BINARY_DIR}/sawClaronMicronTracker")

    # initial find_package doesn't have cisstQt
    cisst_set_directories (cisstQt)

    # for Qt generated header files
    include_directories (${CMAKE_CURRENT_BINARY_DIR})
    qt4_wrap_cpp (SAW_MICRON_TRACKER_QT_COMPONENTS_GENERATED
                  ${sawClaronMicronTracker_HEADER_DIR}/mtsMicronTrackerControllerQtComponent.h
                  ${sawClaronMicronTracker_HEADER_DIR}/mtsMicronTrackerToolQtComponent.h)
    qt4_wrap_ui (SAW_MICRON_TRACKER_QT_WIDGETS_GENERATED
                 mtsMicronTrackerControllerQtWidget.ui
                 mtsMicronTrackerToolQtWidget.ui)

    add_library (sawClaronMicronTrackerQt
                 ${SAW_MICRON_TRACKER_QT_COMPONENTS_GENERATED}
                 ${SAW_MICRON_TRACKER_QT_WIDGETS_GENERATED}
                 ${sawClaronMicronTracker_HEADER_DIR}/sawClaronMicronTrackerExportQt.h
                 mtsMicronTrackerControllerQtComponent.cpp
                 ${sawClaronMicronTracker_HEADER_DIR}/mtsMicronTrackerControllerQtComponent.h
                 mtsMicronTrackerToolQtComponent.cpp
                 ${sawClaronMicronTracker_HEADER_DIR}/mtsMicronTrackerToolQtComponent.h)
    set_property (TARGET sawClaronMicronTrackerQt PROPERTY FOLDER "sawClaronMicronTracker")

    # find all the header files generated by qt4_wrap_ui and copy to include dir
    foreach (headerFile ${SAW_MICRON_TRACKER_QT_WIDGETS_GENERATED})
      # get the filename only
      get_filename_component (fileName "${headerFile}" NAME)
      # recent versions of CMake add a prefix ui_, strip it!
      string (REGEX REPLACE "^ui_" ""
              fileNameWoUI ${fileName})
      add_custom_command (TARGET sawClaronMicronTrackerQt
                          POST_BUILD
                          COMMAND ${CMAKE_COMMAND}
                          ARGS -E copy_if_different
                                  ${headerFile}
                                  ${sawClaronMicronTracker_BINARY_DIR}/sawClaronMicronTracker/${fileNameWoUI})
    endforeach (headerFile ${SAW_MICRON_TRACKER_QT_WIDGETS_GENERATED})

    target_link_libraries (sawClaronMicronTrackerQt ${QT_LIBRARIES})
    cisst_target_link_libraries (sawClaronMicronTrackerQt ${REQUIRED_CISST_LIBRARIES} cisstQt)
  endif (CISST_HAS_QT)

  configure_file ("${CMAKE_CURRENT_SOURCE_DIR}/sawClaronMicronTrackerConfig.cmake.in"
                  "${sawClaronMicronTracker_BINARY_DIR}/sawClaronMicronTrackerConfig.cmake"
                   @ONLY@)

  # Install target for headers and library
  install (DIRECTORY
           "${sawClaronMicronTracker_SOURCE_DIR}/include/sawClaronMicronTracker"
           DESTINATION include)

  install (TARGETS sawClaronMicronTracker
           RUNTIME DESTINATION bin
           LIBRARY DESTINATION lib
           ARCHIVE DESTINATION lib)

  install (FILES "${sawClaronMicronTracker_BINARY_DIR}/sawClaronMicronTrackerConfig.cmake"
           DESTINATION "${CISST_CMAKE_INSTALL_SUFFIX}/saw")

else (cisst_FOUND_AS_REQUIRED)
  message ("Information: code in ${CMAKE_CURRENT_SOURCE_DIR} will not be compiled, it requires ${REQUIRED_CISST_LIBRARIES}")
endif (cisst_FOUND_AS_REQUIRED)
