#
# (C) Copyright 2011-2014 Johns Hopkins University (JHU), All Rights
# Reserved.
#
# --- begin cisst license - do not edit ---
#
# This software is provided "as is" under an open source license, with
# no warranty.  The complete license can be found in license.txt and
# http://www.cisst.org/cisst/license.txt.
#
# --- end cisst license ---

# create a list of required cisst libraries
set (REQUIRED_CISST_LIBRARIES cisstCommon
                              cisstCommonXML
                              cisstVector
                              cisstNumerical
                              cisstOSAbstraction
                              cisstMultiTask
                              cisstParameterTypes)

find_package (cisst REQUIRED ${REQUIRED_CISST_LIBRARIES})

if (cisst_FOUND_AS_REQUIRED)

  # load cisst configuration
  include (${CISST_USE_FILE})

  # create/configure file for find_package (sawNDITracker)
  set (sawNDITracker_INCLUDE_DIR "${sawNDITracker_SOURCE_DIR}/include" "${sawNDITracker_BINARY_DIR}")
  set (sawNDITracker_LIBRARY_DIR "${LIBRARY_OUTPUT_PATH}")
  set (sawNDITracker_LIBRARIES sawNDITracker)
  set (sawNDITrackerQt_LIBRARIES sawNDITrackerQt)

  include_directories (${sawNDITracker_INCLUDE_DIR} ${sawNDITracker_BINARY_DIR})
  set (sawNDITracker_HEADER_DIR "${sawNDITracker_SOURCE_DIR}/include/sawNDITracker")

  add_library (sawNDITracker
               ${sawNDITracker_HEADER_DIR}/sawNDITrackerExport.h
               mtsNDISerial.cpp
               ${sawNDITracker_HEADER_DIR}/mtsNDISerial.h)
  set_property (TARGET sawNDITracker PROPERTY FOLDER "sawNDITracker")
  cisst_target_link_libraries (sawNDITracker ${REQUIRED_CISST_LIBRARIES})

  # Qt widgets
  if (CISST_HAS_QT)

    file (MAKE_DIRECTORY "${sawNDITracker_BINARY_DIR}/sawNDITracker")

    # initial find_package doesn't have cisstQt
    cisst_set_directories (cisstQt)

    # for Qt generated header files
    include_directories (${CMAKE_CURRENT_BINARY_DIR})

    if (CISST_HAS_QT4)
      qt4_wrap_cpp (SAW_NDISERIAL_QT_COMPONENTS_GENERATED
                    ${sawNDITracker_HEADER_DIR}/mtsNDISerialControllerQtComponent.h
                    ${sawNDITracker_HEADER_DIR}/mtsNDISerialToolQtComponent.h)
      qt4_wrap_ui (SAW_NDISERIAL_QT_WIDGETS_GENERATED
                   mtsNDISerialControllerQtWidget.ui
                   mtsNDISerialToolQtWidget.ui)
    else (CISST_HAS_QT4)
       # assumes Qt 5 Auto Moc
      set (CMAKE_AUTOMOC ON)
      qt5_wrap_ui (SAW_NDISERIAL_QT_WIDGETS_GENERATED
                   mtsNDISerialControllerQtWidget.ui
                   mtsNDISerialToolQtWidget.ui)
    endif (CISST_HAS_QT4)

    add_library (sawNDITrackerQt
                 ${SAW_NDISERIAL_QT_COMPONENTS_GENERATED}
                 ${SAW_NDISERIAL_QT_WIDGETS_GENERATED}
                 ${sawNDITracker_HEADER_DIR}/sawNDITrackerExportQt.h
                 mtsNDISerialControllerQtComponent.cpp
                 ${sawNDITracker_HEADER_DIR}/mtsNDISerialControllerQtComponent.h
                 mtsNDISerialToolQtComponent.cpp
                 ${sawNDITracker_HEADER_DIR}/mtsNDISerialToolQtComponent.h)
    set_property (TARGET sawNDITrackerQt PROPERTY FOLDER "sawNDITracker")

    target_link_libraries (sawNDITrackerQt ${QT_LIBRARIES})
    cisst_target_link_libraries (sawNDITrackerQt ${REQUIRED_CISST_LIBRARIES} cisstQt)

    # find all the header files generated by qt4_wrap_ui and copy to include dir
    foreach (headerFile ${SAW_NDISERIAL_QT_WIDGETS_GENERATED})
      # get the filename only
      get_filename_component (fileName "${headerFile}" NAME)
      # recent versions of CMake add a prefix ui_, strip it!
      string (REGEX REPLACE "^ui_" ""
              fileNameWoUI ${fileName})
      add_custom_command (TARGET sawNDITrackerQt
                          POST_BUILD
                          COMMAND ${CMAKE_COMMAND}
                          ARGS -E copy_if_different
                                  ${headerFile}
                                  ${sawNDITracker_BINARY_DIR}/sawNDITracker/${fileNameWoUI})
    endforeach (headerFile ${SAW_NDISERIAL_QT_WIDGETS_GENERATED})
  endif (CISST_HAS_QT)

  configure_file ("${CMAKE_CURRENT_SOURCE_DIR}/sawNDITrackerConfig.cmake.in"
                  "${sawNDITracker_BINARY_DIR}/sawNDITrackerConfig.cmake"
                   @ONLY@)

  # Install target for headers and library
  install (DIRECTORY
           "${sawNDITracker_SOURCE_DIR}/include/sawNDITracker"
           DESTINATION include
           PATTERN .svn EXCLUDE)

  install (TARGETS sawNDITracker
           RUNTIME DESTINATION bin
           LIBRARY DESTINATION lib
           ARCHIVE DESTINATION lib)

  install (FILES "${sawNDITracker_BINARY_DIR}/sawNDITrackerConfig.cmake"
           DESTINATION "${CISST_CMAKE_INSTALL_SUFFIX}/saw")

else (cisst_FOUND_AS_REQUIRED)
  message ("Information: code in ${CMAKE_CURRENT_SOURCE_DIR} will not be compiled, it requires ${REQUIRED_CISST_LIBRARIES}")
endif (cisst_FOUND_AS_REQUIRED)
